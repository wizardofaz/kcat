# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2008 Dave Freese, W1HKJ (w1hkj AT w1hkj DOT com)


pkgdatadir = $(datadir)/kcat
pkgincludedir = $(includedir)/kcat
pkglibdir = $(libdir)/kcat
pkglibexecdir = $(libexecdir)/kcat
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
bin_PROGRAMS = kcat$(EXEEXT)
##am__append_1 = $(MINGW32_SRC)
#am__append_2 = $(INSTALLER_FILE)
#am__append_3 = $(APPBUNDLE_NOLIBS) $(APPBUNDLE) $(APPBUNDLE)*.dmg
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/build.m4 \
	$(top_srcdir)/m4/debug.m4 $(top_srcdir)/m4/fltk.m4 \
	$(top_srcdir)/m4/funcs.m4 $(top_srcdir)/m4/macosx.m4 \
	$(top_srcdir)/m4/np-compat.m4 $(top_srcdir)/m4/opt.m4 \
	$(top_srcdir)/m4/pkg-config.m4 $(top_srcdir)/m4/static.m4 \
	$(top_srcdir)/m4/win32.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__kcat_SOURCES_DIST = kachina.rc include/kachinarc.h mingw.c \
	include/compat.h include/compat-mingw.h dialogs.cpp \
	Kachina.cpp Fl_SigBar.cpp FreqControl.cpp images.cpp \
	IOspec.cpp Kachina_io.cpp KachinaPanel.cxx serialcomm.cpp \
	support.cpp telemetry.cpp cstack.cpp include/cstack.h \
	include/dialogs.h include/Fl_SigBar.h include/FreqControl.h \
	include/images.h include/IOspec.h include/Kachina.h \
	include/Kachina_io.h include/KachinaPanel.h \
	include/linserial.h include/serialcomm.h include/support.h \
	include/test.h include/version.h include/winserial.h
am__objects_1 = kachina.$(OBJEXT) kcat-mingw.$(OBJEXT)
##am__objects_2 = $(am__objects_1)
am_kcat_OBJECTS = $(am__objects_2) kcat-dialogs.$(OBJEXT) \
	kcat-Kachina.$(OBJEXT) kcat-Fl_SigBar.$(OBJEXT) \
	kcat-FreqControl.$(OBJEXT) kcat-images.$(OBJEXT) \
	kcat-IOspec.$(OBJEXT) kcat-Kachina_io.$(OBJEXT) \
	kcat-KachinaPanel.$(OBJEXT) kcat-serialcomm.$(OBJEXT) \
	kcat-support.$(OBJEXT) kcat-telemetry.$(OBJEXT) \
	kcat-cstack.$(OBJEXT)
am__objects_3 =
nodist_kcat_OBJECTS = $(am__objects_3)
kcat_OBJECTS = $(am_kcat_OBJECTS) $(nodist_kcat_OBJECTS)
kcat_DEPENDENCIES =
kcat_LINK = $(CXXLD) $(kcat_CXXFLAGS) $(CXXFLAGS) $(kcat_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(kcat_SOURCES) $(EXTRA_kcat_SOURCES) $(nodist_kcat_SOURCES)
DIST_SOURCES = $(am__kcat_SOURCES_DIST) $(EXTRA_kcat_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dave/dev/dev.KACHINA/kcat.git/build-aux/missing --run aclocal-1.11
AC_CONFIG_ARGS = 
AMTAR = ${SHELL} /home/dave/dev/dev.KACHINA/kcat.git/build-aux/missing --run tar
AUTOCONF = ${SHELL} /home/dave/dev/dev.KACHINA/kcat.git/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/dave/dev/dev.KACHINA/kcat.git/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /home/dave/dev/dev.KACHINA/kcat.git/build-aux/missing --run automake-1.11
AWK = gawk
BFD_CFLAGS = 
BFD_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBUG_CFLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXTRA_LIBS =  -ldl  -lrt  -lpthread 
FLTK_CFLAGS = -I/usr/local/include -I/usr/include/freetype2 -D_THREAD_SAFE -D_REENTRANT
FLTK_CONFIG = /usr/local/bin/fltk-config
FLTK_LIBS = -L/usr/local/lib -lfltk_images -lpng -lz -ljpeg -lfltk -lXft -lpthread -ldl -lm -lXext -lX11
FLUID = fluid
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAC_UNIVERSAL_CFLAGS = 
MAC_UNIVERSAL_LDFLAGS = 
MAKEINFO = ${SHELL} /home/dave/dev/dev.KACHINA/kcat.git/build-aux/missing --run makeinfo
MAKENSIS = 
MKDIR_P = /bin/mkdir -p
OBJEXT = o
OPT_CFLAGS = -O2 -ffast-math -finline-functions -fomit-frame-pointer
PACKAGE = kcat
PACKAGE_BUGREPORT = w1hkj AT w1hkj DOT com
PACKAGE_NAME = kcat
PACKAGE_STRING = kcat 1.0.01
PACKAGE_TARNAME = kcat
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.01
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POW_LIB = 
PTW32_CFLAGS = 
PTW32_LIBS = 
RDYNAMIC = 
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 1.0.01
WINDRES = 
X_CFLAGS =  
X_LIBS = -lX11  
abs_builddir = /home/dave/dev/dev.KACHINA/kcat.git/src
abs_srcdir = /home/dave/dev/dev.KACHINA/kcat.git/src
abs_top_builddir = /home/dave/dev/dev.KACHINA/kcat.git
abs_top_srcdir = /home/dave/dev/dev.KACHINA/kcat.git
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/dave/dev/dev.KACHINA/kcat.git/build-aux/install-sh
kcat_BUILD_CPPFLAGS = -I$(srcdir) -I$(srcdir)/include -I$(srcdir)/images
kcat_BUILD_CXXFLAGS = -I/usr/local/include -I/usr/include/freetype2 -D_THREAD_SAFE -D_REENTRANT -pipe -Wall -fexceptions -O2 -ffast-math -finline-functions -fomit-frame-pointer   -DNDEBUG
kcat_BUILD_LDADD = -L/usr/local/lib -lfltk_images -lpng -lz -ljpeg -lfltk -lXft -lpthread -ldl -lm -lXext -lX11  -ldl  -lrt  -lpthread  
kcat_BUILD_LDFLAGS = 
kcat_VERSION = 1.0.01

########################################################################
kcat_VERSION_MAJOR = 1
kcat_VERSION_MINOR = 0
kcat_VERSION_PATCH = .01
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = i686-pc-linux-gnu
target_alias = 
target_cpu = i686
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
kcat_CPPFLAGS = -I$(srcdir) -I$(srcdir)/include -I$(srcdir)/images
kcat_CXXFLAGS = -I/usr/local/include -I/usr/include/freetype2 -D_THREAD_SAFE -D_REENTRANT -pipe -Wall -fexceptions -O2 -ffast-math -finline-functions -fomit-frame-pointer   -DNDEBUG
kcat_CFLAGS = $(kcat_CXXFLAGS)
kcat_LDFLAGS = 
kcat_LDADD = -L/usr/local/lib -lfltk_images -lpng -lz -ljpeg -lfltk -lXft -lpthread -ldl -lm -lXext -lX11  -ldl  -lrt  -lpthread  
MINGW32_SRC = \
	kachina.rc \
	include/kachinarc.h \
	mingw.c \
	include/compat.h \
	include/compat-mingw.h


# We distribute these but do not always compile them
EXTRA_kcat_SOURCES = $(kcat_WIN32_RES_SRC) $(MINGW32_SRC)

# Sources that we build. It is OK to have headers here.
kcat_SOURCES = $(am__append_1) dialogs.cpp Kachina.cpp Fl_SigBar.cpp \
	FreqControl.cpp images.cpp IOspec.cpp Kachina_io.cpp \
	KachinaPanel.cxx serialcomm.cpp support.cpp telemetry.cpp \
	cstack.cpp include/cstack.h include/dialogs.h \
	include/Fl_SigBar.h include/FreqControl.h include/images.h \
	include/IOspec.h include/Kachina.h include/Kachina_io.h \
	include/KachinaPanel.h include/kachinarc.h include/linserial.h \
	include/serialcomm.h include/support.h include/test.h \
	include/version.h include/winserial.h

# Sources that are generated,
BUILT_SOURCES = 
# not distributed,
nodist_kcat_SOURCES = $(BUILT_SOURCES)
# and deleted by the clean targets
CLEANFILES = $(BUILT_SOURCES) $(am__append_2)
CLEAN_LOCAL = $(am__append_3)
FL_SRC = KachinaPanel.fl
INSTALLER_FILE = kcat-$(kcat_VERSION)_setup.exe
APPBUNDLE = kcat-$(kcat_VERSION)
APPBUNDLE_NOLIBS = $(APPBUNDLE)-nolibs

# Additional source files that are distributed

# Additional non-source files that are distributed
# Additional source files that support non-Linux cross compilation
EXTRA_DIST = kachina.rc images/kachina.xpm images/mvolts.xbm \
	images/p120.xbm images/p150.xbm images/p15.xbm images/p30.xbm \
	images/p45.xbm images/p60.xbm images/p75.xbm images/p90.xbm \
	images/rev.xbm images/smeter.xbm images/swr.xbm images/dbm.xbm \
	images/alc.xbm $(srcdir)/../data/kcat.desktop \
	$(srcdir)/../data/kcat.xpm $(srcdir)/../data/win32/fl_app.nsi \
	$(srcdir)/../data/win32/kcat.ico \
	$(srcdir)/../scripts/mknsisinst.sh \
	$(srcdir)/../scripts/build4mingw.sh \
	$(srcdir)/../data/mac/Info.plist.in \
	$(srcdir)/../data/mac/kcat.icns \
	$(srcdir)/../scripts/mkappbundle.sh $(kcat_WIN32_SRC) \
	$(kcat_FL_SRC)
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .cxx .o .obj .rc
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

installcheck-binPROGRAMS: $(bin_PROGRAMS)
	bad=0; pid=$$$$; list="$(bin_PROGRAMS)"; for p in $$list; do \
	  case ' $(AM_INSTALLCHECK_STD_OPTIONS_EXEMPT) ' in \
	   *" $$p "* | *" $(srcdir)/$$p "*) continue;; \
	  esac; \
	  f=`echo "$$p" | \
	     sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  for opt in --help --version; do \
	    if "$(DESTDIR)$(bindir)/$$f" $$opt >c$${pid}_.out \
	         2>c$${pid}_.err </dev/null \
		 && test -n "`cat c$${pid}_.out`" \
		 && test -z "`cat c$${pid}_.err`"; then :; \
	    else echo "$$f does not support $$opt" 1>&2; bad=1; fi; \
	  done; \
	done; rm -f c$${pid}_.???; exit $$bad
kcat$(EXEEXT): $(kcat_OBJECTS) $(kcat_DEPENDENCIES) 
	@rm -f kcat$(EXEEXT)
	$(kcat_LINK) $(kcat_OBJECTS) $(kcat_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/kcat-Fl_SigBar.Po
include ./$(DEPDIR)/kcat-FreqControl.Po
include ./$(DEPDIR)/kcat-IOspec.Po
include ./$(DEPDIR)/kcat-Kachina.Po
include ./$(DEPDIR)/kcat-KachinaPanel.Po
include ./$(DEPDIR)/kcat-Kachina_io.Po
include ./$(DEPDIR)/kcat-cstack.Po
include ./$(DEPDIR)/kcat-dialogs.Po
include ./$(DEPDIR)/kcat-images.Po
include ./$(DEPDIR)/kcat-mingw.Po
include ./$(DEPDIR)/kcat-serialcomm.Po
include ./$(DEPDIR)/kcat-support.Po
include ./$(DEPDIR)/kcat-telemetry.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

kcat-mingw.o: mingw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CFLAGS) $(CFLAGS) -MT kcat-mingw.o -MD -MP -MF $(DEPDIR)/kcat-mingw.Tpo -c -o kcat-mingw.o `test -f 'mingw.c' || echo '$(srcdir)/'`mingw.c
	$(am__mv) $(DEPDIR)/kcat-mingw.Tpo $(DEPDIR)/kcat-mingw.Po
#	source='mingw.c' object='kcat-mingw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CFLAGS) $(CFLAGS) -c -o kcat-mingw.o `test -f 'mingw.c' || echo '$(srcdir)/'`mingw.c

kcat-mingw.obj: mingw.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CFLAGS) $(CFLAGS) -MT kcat-mingw.obj -MD -MP -MF $(DEPDIR)/kcat-mingw.Tpo -c -o kcat-mingw.obj `if test -f 'mingw.c'; then $(CYGPATH_W) 'mingw.c'; else $(CYGPATH_W) '$(srcdir)/mingw.c'; fi`
	$(am__mv) $(DEPDIR)/kcat-mingw.Tpo $(DEPDIR)/kcat-mingw.Po
#	source='mingw.c' object='kcat-mingw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CFLAGS) $(CFLAGS) -c -o kcat-mingw.obj `if test -f 'mingw.c'; then $(CYGPATH_W) 'mingw.c'; else $(CYGPATH_W) '$(srcdir)/mingw.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

kcat-dialogs.o: dialogs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-dialogs.o -MD -MP -MF $(DEPDIR)/kcat-dialogs.Tpo -c -o kcat-dialogs.o `test -f 'dialogs.cpp' || echo '$(srcdir)/'`dialogs.cpp
	$(am__mv) $(DEPDIR)/kcat-dialogs.Tpo $(DEPDIR)/kcat-dialogs.Po
#	source='dialogs.cpp' object='kcat-dialogs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-dialogs.o `test -f 'dialogs.cpp' || echo '$(srcdir)/'`dialogs.cpp

kcat-dialogs.obj: dialogs.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-dialogs.obj -MD -MP -MF $(DEPDIR)/kcat-dialogs.Tpo -c -o kcat-dialogs.obj `if test -f 'dialogs.cpp'; then $(CYGPATH_W) 'dialogs.cpp'; else $(CYGPATH_W) '$(srcdir)/dialogs.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-dialogs.Tpo $(DEPDIR)/kcat-dialogs.Po
#	source='dialogs.cpp' object='kcat-dialogs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-dialogs.obj `if test -f 'dialogs.cpp'; then $(CYGPATH_W) 'dialogs.cpp'; else $(CYGPATH_W) '$(srcdir)/dialogs.cpp'; fi`

kcat-Kachina.o: Kachina.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-Kachina.o -MD -MP -MF $(DEPDIR)/kcat-Kachina.Tpo -c -o kcat-Kachina.o `test -f 'Kachina.cpp' || echo '$(srcdir)/'`Kachina.cpp
	$(am__mv) $(DEPDIR)/kcat-Kachina.Tpo $(DEPDIR)/kcat-Kachina.Po
#	source='Kachina.cpp' object='kcat-Kachina.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-Kachina.o `test -f 'Kachina.cpp' || echo '$(srcdir)/'`Kachina.cpp

kcat-Kachina.obj: Kachina.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-Kachina.obj -MD -MP -MF $(DEPDIR)/kcat-Kachina.Tpo -c -o kcat-Kachina.obj `if test -f 'Kachina.cpp'; then $(CYGPATH_W) 'Kachina.cpp'; else $(CYGPATH_W) '$(srcdir)/Kachina.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-Kachina.Tpo $(DEPDIR)/kcat-Kachina.Po
#	source='Kachina.cpp' object='kcat-Kachina.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-Kachina.obj `if test -f 'Kachina.cpp'; then $(CYGPATH_W) 'Kachina.cpp'; else $(CYGPATH_W) '$(srcdir)/Kachina.cpp'; fi`

kcat-Fl_SigBar.o: Fl_SigBar.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-Fl_SigBar.o -MD -MP -MF $(DEPDIR)/kcat-Fl_SigBar.Tpo -c -o kcat-Fl_SigBar.o `test -f 'Fl_SigBar.cpp' || echo '$(srcdir)/'`Fl_SigBar.cpp
	$(am__mv) $(DEPDIR)/kcat-Fl_SigBar.Tpo $(DEPDIR)/kcat-Fl_SigBar.Po
#	source='Fl_SigBar.cpp' object='kcat-Fl_SigBar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-Fl_SigBar.o `test -f 'Fl_SigBar.cpp' || echo '$(srcdir)/'`Fl_SigBar.cpp

kcat-Fl_SigBar.obj: Fl_SigBar.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-Fl_SigBar.obj -MD -MP -MF $(DEPDIR)/kcat-Fl_SigBar.Tpo -c -o kcat-Fl_SigBar.obj `if test -f 'Fl_SigBar.cpp'; then $(CYGPATH_W) 'Fl_SigBar.cpp'; else $(CYGPATH_W) '$(srcdir)/Fl_SigBar.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-Fl_SigBar.Tpo $(DEPDIR)/kcat-Fl_SigBar.Po
#	source='Fl_SigBar.cpp' object='kcat-Fl_SigBar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-Fl_SigBar.obj `if test -f 'Fl_SigBar.cpp'; then $(CYGPATH_W) 'Fl_SigBar.cpp'; else $(CYGPATH_W) '$(srcdir)/Fl_SigBar.cpp'; fi`

kcat-FreqControl.o: FreqControl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-FreqControl.o -MD -MP -MF $(DEPDIR)/kcat-FreqControl.Tpo -c -o kcat-FreqControl.o `test -f 'FreqControl.cpp' || echo '$(srcdir)/'`FreqControl.cpp
	$(am__mv) $(DEPDIR)/kcat-FreqControl.Tpo $(DEPDIR)/kcat-FreqControl.Po
#	source='FreqControl.cpp' object='kcat-FreqControl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-FreqControl.o `test -f 'FreqControl.cpp' || echo '$(srcdir)/'`FreqControl.cpp

kcat-FreqControl.obj: FreqControl.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-FreqControl.obj -MD -MP -MF $(DEPDIR)/kcat-FreqControl.Tpo -c -o kcat-FreqControl.obj `if test -f 'FreqControl.cpp'; then $(CYGPATH_W) 'FreqControl.cpp'; else $(CYGPATH_W) '$(srcdir)/FreqControl.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-FreqControl.Tpo $(DEPDIR)/kcat-FreqControl.Po
#	source='FreqControl.cpp' object='kcat-FreqControl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-FreqControl.obj `if test -f 'FreqControl.cpp'; then $(CYGPATH_W) 'FreqControl.cpp'; else $(CYGPATH_W) '$(srcdir)/FreqControl.cpp'; fi`

kcat-images.o: images.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-images.o -MD -MP -MF $(DEPDIR)/kcat-images.Tpo -c -o kcat-images.o `test -f 'images.cpp' || echo '$(srcdir)/'`images.cpp
	$(am__mv) $(DEPDIR)/kcat-images.Tpo $(DEPDIR)/kcat-images.Po
#	source='images.cpp' object='kcat-images.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-images.o `test -f 'images.cpp' || echo '$(srcdir)/'`images.cpp

kcat-images.obj: images.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-images.obj -MD -MP -MF $(DEPDIR)/kcat-images.Tpo -c -o kcat-images.obj `if test -f 'images.cpp'; then $(CYGPATH_W) 'images.cpp'; else $(CYGPATH_W) '$(srcdir)/images.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-images.Tpo $(DEPDIR)/kcat-images.Po
#	source='images.cpp' object='kcat-images.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-images.obj `if test -f 'images.cpp'; then $(CYGPATH_W) 'images.cpp'; else $(CYGPATH_W) '$(srcdir)/images.cpp'; fi`

kcat-IOspec.o: IOspec.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-IOspec.o -MD -MP -MF $(DEPDIR)/kcat-IOspec.Tpo -c -o kcat-IOspec.o `test -f 'IOspec.cpp' || echo '$(srcdir)/'`IOspec.cpp
	$(am__mv) $(DEPDIR)/kcat-IOspec.Tpo $(DEPDIR)/kcat-IOspec.Po
#	source='IOspec.cpp' object='kcat-IOspec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-IOspec.o `test -f 'IOspec.cpp' || echo '$(srcdir)/'`IOspec.cpp

kcat-IOspec.obj: IOspec.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-IOspec.obj -MD -MP -MF $(DEPDIR)/kcat-IOspec.Tpo -c -o kcat-IOspec.obj `if test -f 'IOspec.cpp'; then $(CYGPATH_W) 'IOspec.cpp'; else $(CYGPATH_W) '$(srcdir)/IOspec.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-IOspec.Tpo $(DEPDIR)/kcat-IOspec.Po
#	source='IOspec.cpp' object='kcat-IOspec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-IOspec.obj `if test -f 'IOspec.cpp'; then $(CYGPATH_W) 'IOspec.cpp'; else $(CYGPATH_W) '$(srcdir)/IOspec.cpp'; fi`

kcat-Kachina_io.o: Kachina_io.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-Kachina_io.o -MD -MP -MF $(DEPDIR)/kcat-Kachina_io.Tpo -c -o kcat-Kachina_io.o `test -f 'Kachina_io.cpp' || echo '$(srcdir)/'`Kachina_io.cpp
	$(am__mv) $(DEPDIR)/kcat-Kachina_io.Tpo $(DEPDIR)/kcat-Kachina_io.Po
#	source='Kachina_io.cpp' object='kcat-Kachina_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-Kachina_io.o `test -f 'Kachina_io.cpp' || echo '$(srcdir)/'`Kachina_io.cpp

kcat-Kachina_io.obj: Kachina_io.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-Kachina_io.obj -MD -MP -MF $(DEPDIR)/kcat-Kachina_io.Tpo -c -o kcat-Kachina_io.obj `if test -f 'Kachina_io.cpp'; then $(CYGPATH_W) 'Kachina_io.cpp'; else $(CYGPATH_W) '$(srcdir)/Kachina_io.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-Kachina_io.Tpo $(DEPDIR)/kcat-Kachina_io.Po
#	source='Kachina_io.cpp' object='kcat-Kachina_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-Kachina_io.obj `if test -f 'Kachina_io.cpp'; then $(CYGPATH_W) 'Kachina_io.cpp'; else $(CYGPATH_W) '$(srcdir)/Kachina_io.cpp'; fi`

kcat-KachinaPanel.o: KachinaPanel.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-KachinaPanel.o -MD -MP -MF $(DEPDIR)/kcat-KachinaPanel.Tpo -c -o kcat-KachinaPanel.o `test -f 'KachinaPanel.cxx' || echo '$(srcdir)/'`KachinaPanel.cxx
	$(am__mv) $(DEPDIR)/kcat-KachinaPanel.Tpo $(DEPDIR)/kcat-KachinaPanel.Po
#	source='KachinaPanel.cxx' object='kcat-KachinaPanel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-KachinaPanel.o `test -f 'KachinaPanel.cxx' || echo '$(srcdir)/'`KachinaPanel.cxx

kcat-KachinaPanel.obj: KachinaPanel.cxx
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-KachinaPanel.obj -MD -MP -MF $(DEPDIR)/kcat-KachinaPanel.Tpo -c -o kcat-KachinaPanel.obj `if test -f 'KachinaPanel.cxx'; then $(CYGPATH_W) 'KachinaPanel.cxx'; else $(CYGPATH_W) '$(srcdir)/KachinaPanel.cxx'; fi`
	$(am__mv) $(DEPDIR)/kcat-KachinaPanel.Tpo $(DEPDIR)/kcat-KachinaPanel.Po
#	source='KachinaPanel.cxx' object='kcat-KachinaPanel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-KachinaPanel.obj `if test -f 'KachinaPanel.cxx'; then $(CYGPATH_W) 'KachinaPanel.cxx'; else $(CYGPATH_W) '$(srcdir)/KachinaPanel.cxx'; fi`

kcat-serialcomm.o: serialcomm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-serialcomm.o -MD -MP -MF $(DEPDIR)/kcat-serialcomm.Tpo -c -o kcat-serialcomm.o `test -f 'serialcomm.cpp' || echo '$(srcdir)/'`serialcomm.cpp
	$(am__mv) $(DEPDIR)/kcat-serialcomm.Tpo $(DEPDIR)/kcat-serialcomm.Po
#	source='serialcomm.cpp' object='kcat-serialcomm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-serialcomm.o `test -f 'serialcomm.cpp' || echo '$(srcdir)/'`serialcomm.cpp

kcat-serialcomm.obj: serialcomm.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-serialcomm.obj -MD -MP -MF $(DEPDIR)/kcat-serialcomm.Tpo -c -o kcat-serialcomm.obj `if test -f 'serialcomm.cpp'; then $(CYGPATH_W) 'serialcomm.cpp'; else $(CYGPATH_W) '$(srcdir)/serialcomm.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-serialcomm.Tpo $(DEPDIR)/kcat-serialcomm.Po
#	source='serialcomm.cpp' object='kcat-serialcomm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-serialcomm.obj `if test -f 'serialcomm.cpp'; then $(CYGPATH_W) 'serialcomm.cpp'; else $(CYGPATH_W) '$(srcdir)/serialcomm.cpp'; fi`

kcat-support.o: support.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-support.o -MD -MP -MF $(DEPDIR)/kcat-support.Tpo -c -o kcat-support.o `test -f 'support.cpp' || echo '$(srcdir)/'`support.cpp
	$(am__mv) $(DEPDIR)/kcat-support.Tpo $(DEPDIR)/kcat-support.Po
#	source='support.cpp' object='kcat-support.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-support.o `test -f 'support.cpp' || echo '$(srcdir)/'`support.cpp

kcat-support.obj: support.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-support.obj -MD -MP -MF $(DEPDIR)/kcat-support.Tpo -c -o kcat-support.obj `if test -f 'support.cpp'; then $(CYGPATH_W) 'support.cpp'; else $(CYGPATH_W) '$(srcdir)/support.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-support.Tpo $(DEPDIR)/kcat-support.Po
#	source='support.cpp' object='kcat-support.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-support.obj `if test -f 'support.cpp'; then $(CYGPATH_W) 'support.cpp'; else $(CYGPATH_W) '$(srcdir)/support.cpp'; fi`

kcat-telemetry.o: telemetry.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-telemetry.o -MD -MP -MF $(DEPDIR)/kcat-telemetry.Tpo -c -o kcat-telemetry.o `test -f 'telemetry.cpp' || echo '$(srcdir)/'`telemetry.cpp
	$(am__mv) $(DEPDIR)/kcat-telemetry.Tpo $(DEPDIR)/kcat-telemetry.Po
#	source='telemetry.cpp' object='kcat-telemetry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-telemetry.o `test -f 'telemetry.cpp' || echo '$(srcdir)/'`telemetry.cpp

kcat-telemetry.obj: telemetry.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-telemetry.obj -MD -MP -MF $(DEPDIR)/kcat-telemetry.Tpo -c -o kcat-telemetry.obj `if test -f 'telemetry.cpp'; then $(CYGPATH_W) 'telemetry.cpp'; else $(CYGPATH_W) '$(srcdir)/telemetry.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-telemetry.Tpo $(DEPDIR)/kcat-telemetry.Po
#	source='telemetry.cpp' object='kcat-telemetry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-telemetry.obj `if test -f 'telemetry.cpp'; then $(CYGPATH_W) 'telemetry.cpp'; else $(CYGPATH_W) '$(srcdir)/telemetry.cpp'; fi`

kcat-cstack.o: cstack.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-cstack.o -MD -MP -MF $(DEPDIR)/kcat-cstack.Tpo -c -o kcat-cstack.o `test -f 'cstack.cpp' || echo '$(srcdir)/'`cstack.cpp
	$(am__mv) $(DEPDIR)/kcat-cstack.Tpo $(DEPDIR)/kcat-cstack.Po
#	source='cstack.cpp' object='kcat-cstack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-cstack.o `test -f 'cstack.cpp' || echo '$(srcdir)/'`cstack.cpp

kcat-cstack.obj: cstack.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -MT kcat-cstack.obj -MD -MP -MF $(DEPDIR)/kcat-cstack.Tpo -c -o kcat-cstack.obj `if test -f 'cstack.cpp'; then $(CYGPATH_W) 'cstack.cpp'; else $(CYGPATH_W) '$(srcdir)/cstack.cpp'; fi`
	$(am__mv) $(DEPDIR)/kcat-cstack.Tpo $(DEPDIR)/kcat-cstack.Po
#	source='cstack.cpp' object='kcat-cstack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(kcat_CPPFLAGS) $(CPPFLAGS) $(kcat_CXXFLAGS) $(CXXFLAGS) -c -o kcat-cstack.obj `if test -f 'cstack.cpp'; then $(CYGPATH_W) 'cstack.cpp'; else $(CYGPATH_W) '$(srcdir)/cstack.cpp'; fi`

.cxx.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am: installcheck-binPROGRAMS

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-local

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-local ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-data-local install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installcheck-binPROGRAMS installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-local


.EXPORT_ALL_VARIABLES: nsisinst appbundle

##.rc.o:
##	$(WINDRES) -I$(srcdir)/include -I$(srcdir)/../data/win32 $< -O coff $@

install-data-local:
	if test -f $(srcdir)/../data/kcat.xpm; then \
	    $(mkinstalldirs) $(DESTDIR)/$(datadir)/pixmaps; \
	    $(INSTALL_DATA) $(srcdir)/../data/kcat.xpm $(DESTDIR)/$(datadir)/pixmaps; \
	fi
	if test -f $(srcdir)/../data/kcat.desktop; then \
	    $(mkinstalldirs) $(DESTDIR)/$(datadir)/applications; \
	    $(INSTALL_DATA) $(srcdir)/../data/kcat.desktop $(DESTDIR)/$(datadir)/applications; \
	fi

uninstall-local:
	rm -f $(DESTDIR)/$(datadir)/pixmaps/kcat.xpm
	rm -f $(DESTDIR)/$(datadir)/applications/kcat.desktop

flgen: $(FL_SRC)
	(cd $(srcdir)/include; \
	for f in $(FL_SRC); do \
	    c=$${f%.fl}.cxx; \
		h=$${f%.fl}.h; \
		h=$${h##*/}; \
	    $(FLUID) -c -o ../$$c -h $$h ../$$f; \
	done)

#nsisinst: $(bin_PROGRAMS)
#	sh $(srcdir)/../scripts/mknsisinst.sh "$(srcdir)/../data" .

#appbundle: $(bin_PROGRAMS)
#	sh $(srcdir)/../scripts/mkappbundle.sh "$(srcdir)/../data" .

#if HAVE_ASCIIDOC
#$(builddir)/../doc/guide.html: $(builddir)/../doc/guide.txt
#	$(MAKE) -C $(builddir)/../doc $(AM_MAKEFLAGS) guide.html

#$(builddir)/dialogs/guide.cxx: $(builddir)/../doc/guide.html
#	mkdir -p $(builddir)/dialogs
#	sed 's/"/\\"/g; s/$$/\\n\\/g; 1 s/.*/const char* szBeginner = "&/; $$ s/.*/&n";/' $< > $@
#dialogs/htmlstrings.cxx: $(builddir)/dialogs/guide.cxx

#distclean-local:
#	@if test "$(builddir)" != "$(srcdir)"; then \
#	    rm -f $(builddir)/dialogs/guide.cxx; \
#        fi
#endif

clean-local:
	-rm -rf $(CLEAN_LOCAL)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
